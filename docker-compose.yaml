version: "3.8"

services:
  project:
    build:
      target: project-image
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    ports:
      - "127.0.0.1:5064:5064"
    environment:
      - HOST=0.0.0.0
      - PORT=5064
      - RDS_DB_URI=${RDS_DB_URI:-postgresql://postgres:pilot5kX8@postgres:5432/project}
    depends_on:
      - postgres
      - s3

  postgres:
    image: postgres:14.2-alpine
    ports:
      - "127.0.0.1:6432:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-project}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-pilot5kX8}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready --username $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  s3:
    image: minio/minio:RELEASE.2022-05-03T20-36-08Z
    ports:
      - "127.0.0.1:9100:9000"
      - "127.0.0.1:9101:9101"
    environment:
      - MINIO_ROOT_USER=${S3_ACCESS_KEY:-GMIMPKTWGOKHIQYYQHPO}
      - MINIO_ROOT_PASSWORD=${S3_SECRET_KEY:-KLdvMcrHMVnar/HJGKVAS/TRglfFvzDrbYpdknbc}
    volumes:
      - s3-data:/data
    command: minio server /data --console-address ":9101"

  alembic:
    build:
      target: alembic-image
    environment:
      - RDS_DB_URI=${RDS_DB_URI:-postgresql://postgres:pilot5kX8@postgres:5432/project}
    volumes:
      - ./migrations/:/app/migrations/
      - ./project/:/app/project/
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres-data:
  s3-data:
